<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ assembly name="$(SolutionDir)\DataModels\bin\Debug\DataModels.dll" #>
<#@ import namespace="DataModels" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ assembly name="mscorlib" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
using System;
using System.ComponentModel.DataAnnotations;

/// <summary>
/// This code is generated from NetGenerator
/// including the basic fields of model
/// </summary>
<#
var assembly = typeof(TableSample).Assembly;
var types = assembly.GetTypes();

foreach (var t in types){
var forType = t;
var theDataAccessTypeName = forType.Name;
#>
public partial class <#=theDataAccessTypeName#>Obj
{
<#
var props = forType.GetProperties();
foreach (var p in props){
	var typeName = p.PropertyType.Name;
	var pName = p.Name;
	if(typeName.Contains("Nullable")){
		typeName = Nullable.GetUnderlyingType(p.PropertyType).Name;
	}
#>
	/// <summary>
    /// <#= pName #> Property
	/// if you want to show in data table or sort, uncomment below lines and put the sequence
    /// </summary>
	//[DisplayColumn(/*display order in data table*/)]
    //[SortingColumn(/*sort order in data table*/)]
	public <#=typeName #> <#= pName #> { get; set; }

<#
}
#>
}


<#
}
#>